{"ast":null,"code":"var _jsxFileName = \"/home/trungn/OneDrive/nodeApp/client/src/components/Report.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\n/**\n *\n * @param {{hostname: string, architecture: string, platform: string,uptime: string,cpu:string,memory: string,network: string,date: string}} props\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Report(props) {\n  _s();\n  var [status, setStatus] = useState(null);\n  useEffect(() => {\n    const socket = io.connect(client + \":\" + port);\n    socket.emit(\"get_init\");\n    socket.on(\"send_data\", data => {\n      setStatus(data);\n    });\n    socket.on(\"error\", () => {\n      //will be handled later...\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n_s(Report, \"BS896UqrqyybjEKvhypabDkHm2E=\");\n_c = Report;\nexport default Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["useEffect","useState","io","Report","props","status","setStatus","socket","connect","client","port","emit","on","data"],"sources":["/home/trungn/OneDrive/nodeApp/client/src/components/Report.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\n\n/**\n *\n * @param {{hostname: string, architecture: string, platform: string,uptime: string,cpu:string,memory: string,network: string,date: string}} props\n */\nfunction Report(props) {\n    var [status, setStatus] = useState(null);\n    useEffect(()=>{\n        const socket = io.connect(client + \":\" + port);\n        socket.emit(\"get_init\");\n        socket.on(\"send_data\", (data) => {\n          setStatus(data);\n        });\n        socket.on(\"error\",()=>{\n            //will be handled later...\n        })\n    },[])\n    return <div>\n        {/* <h1>Host Name: {props.hostname}</h1>\n        <ul>\n            <li>Architecture: {props.architecture}</li>\n            <li>Platform: {props.platform}</li>\n            <li>Up Time: {props.uptime} seconds</li>\n            <li>Memory: {(props.memory.used/1000).toFixed(1)}/{(props.memory.total/1000).toFixed(1)} GB</li>\n            <li>CPU: {props.cpu[0].model}\n                <ul>\n                    {props.cpu.map((proc, idx)=>{\n                        return <li key={idx}>{proc.model} ({proc.speed}): {JSON.stringify(proc.usage)}</li>\n                    })}\n                </ul>\n            </li>\n            <li>Network: {JSON.stringify(props.network)}</li>\n        </ul> */}\n    </div>\n}\n\nexport default Report;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,kBAAkB;;AAGrC;AACA;AACA;AACA;AAHA;AAIA,SAASC,MAAM,CAACC,KAAK,EAAE;EAAA;EACnB,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxCD,SAAS,CAAC,MAAI;IACV,MAAMO,MAAM,GAAGL,EAAE,CAACM,OAAO,CAACC,MAAM,GAAG,GAAG,GAAGC,IAAI,CAAC;IAC9CH,MAAM,CAACI,IAAI,CAAC,UAAU,CAAC;IACvBJ,MAAM,CAACK,EAAE,CAAC,WAAW,EAAGC,IAAI,IAAK;MAC/BP,SAAS,CAACO,IAAI,CAAC;IACjB,CAAC,CAAC;IACFN,MAAM,CAACK,EAAE,CAAC,OAAO,EAAC,MAAI;MAClB;IAAA,CACH,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EACL,oBAAO;IAAA;IAAA;IAAA;EAAA,QAgBD;AACV;AAAC,GA7BQT,MAAM;AAAA,KAANA,MAAM;AA+Bf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}