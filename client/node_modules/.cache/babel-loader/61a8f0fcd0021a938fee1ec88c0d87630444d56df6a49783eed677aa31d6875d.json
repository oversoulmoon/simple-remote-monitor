{"ast":null,"code":"var _jsxFileName = \"/home/trungn/OneDrive/nodeApp/client/src/components/Report.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport CardRegular from \"../ui/CardRegular\";\nimport NetworkReport from \"./NetworkReport\";\nimport classes from \"./Report.module.css\";\n\n/**\n *\n * @param {{hostname: string, architecture: string, platform: string,uptime: string,cpu:string,memory: string,network: string,date: string}} props\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Report(props) {\n  _s();\n  const port = 5782;\n  const INTERVAL = 2000;\n  var [status, setStatus] = useState(null);\n  var local = true;\n  useEffect(() => {\n    const socket = io.connect(props.IP + \":\" + port);\n    // const socket = io.connect(\"http://localhost:5782\");\n\n    socket.emit(\"get_init\");\n    socket.on(\"send_data\", data => {\n      socket.close();\n      setStatus(data);\n      getStatus(data);\n    });\n    socket.on(\"error\", () => {});\n  }, []);\n  function getStatus(data) {\n    const socket = io.connect(props.IP + \":\" + port);\n    // const socket = io.connect(\"http://localhost:5782\");\n    socket.emit(\"get_status\", data);\n    socket.on(\"send_data\", data => {\n      setStatus(data);\n      setTimeout(() => {\n        getStatus(data);\n      }, INTERVAL);\n      socket.close();\n    });\n  }\n  if (status === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.grid,\n      children: [/*#__PURE__*/_jsxDEV(CardRegular, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: status.hostname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Architecture:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \" \", status.architecture, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Platform:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \" \", status.platform, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Up Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \" \", status.uptime, \" seconds\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Memory:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \", (status.memory.used / 1000).toFixed(1), \"/\", (status.memory.total / 1000).toFixed(1), \" GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.smallInfo,\n        children: status.network.map((data, idx) => {\n          return /*#__PURE__*/_jsxDEV(NetworkReport, {\n            ...data\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.bigInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: status.cpu[0].model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: status.cpu.map((proc, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"(\", proc.speed, \"): \", JSON.stringify(proc.usage)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Report, \"BS896UqrqyybjEKvhypabDkHm2E=\");\n_c = Report;\nexport default Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["useEffect","useState","io","CardRegular","NetworkReport","classes","Report","props","port","INTERVAL","status","setStatus","local","socket","connect","IP","emit","on","data","close","getStatus","setTimeout","grid","hostname","architecture","platform","uptime","memory","used","toFixed","total","smallInfo","network","map","idx","bigInfo","cpu","model","proc","speed","JSON","stringify","usage"],"sources":["/home/trungn/OneDrive/nodeApp/client/src/components/Report.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport CardRegular from \"../ui/CardRegular\";\nimport NetworkReport from \"./NetworkReport\";\nimport classes from \"./Report.module.css\";\n\n/**\n *\n * @param {{hostname: string, architecture: string, platform: string,uptime: string,cpu:string,memory: string,network: string,date: string}} props\n */\nfunction Report(props) {\n  const port = 5782;\n  const INTERVAL = 2000;\n  var [status, setStatus] = useState(null);\n  var local = true;\n\n  useEffect(() => {\n    const socket = io.connect(props.IP + \":\" + port);\n    // const socket = io.connect(\"http://localhost:5782\");\n\n    socket.emit(\"get_init\");\n    socket.on(\"send_data\", (data) => {\n      socket.close();\n      setStatus(data);\n      getStatus(data);\n    });\n    socket.on(\"error\", () => {});\n  }, []);\n\n  function getStatus(data) {\n    const socket = io.connect(props.IP + \":\" + port);\n    // const socket = io.connect(\"http://localhost:5782\");\n    socket.emit(\"get_status\", data);\n    socket.on(\"send_data\", (data) => {\n      setStatus(data);\n      setTimeout(() => {\n        getStatus(data);\n      }, INTERVAL);\n      socket.close();\n    });\n  }\n\n  if (status === null) {\n    return (\n      <div>\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <div className={classes.grid}>\n        <CardRegular>\n          <h1>{status.hostname}</h1>\n          <b>Architecture:</b> {status.architecture}\n          <br />\n          <b>Platform:</b> {status.platform}\n          <br />\n          <b>Up Time:</b> {status.uptime} seconds\n          <br />\n          <b>Memory:</b> {(status.memory.used / 1000).toFixed(1)}/\n          {(status.memory.total / 1000).toFixed(1)} GB\n        </CardRegular>\n        <div className={classes.smallInfo}>\n          {status.network.map((data, idx) => {\n            return <NetworkReport key={idx} {...data} />;\n          })}\n        </div>\n        <div className={classes.bigInfo}>\n          <b>{status.cpu[0].model}</b>\n          <ul>\n            {status.cpu.map((proc, idx) => {\n              return (\n                <li key={idx}>\n                  ({proc.speed}): {JSON.stringify(proc.usage)}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Report;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}