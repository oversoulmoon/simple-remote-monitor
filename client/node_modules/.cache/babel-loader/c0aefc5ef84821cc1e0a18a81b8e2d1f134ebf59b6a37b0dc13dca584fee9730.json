{"ast":null,"code":"var _jsxFileName = \"/home/trungn/OneDrive/nodeApp/client/src/components/Report.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\n/**\n *\n * @param {{hostname: string, architecture: string, platform: string,uptime: string,cpu:string,memory: string,network: string,date: string}} props\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Report(props) {\n  _s();\n  const port = 5782;\n  const INTERVAL = 2000;\n  var [status, setStatus] = useState(null);\n  useEffect(() => {\n    const socket = io.connect(props.IP + \":\" + port);\n    socket.emit(\"get_init\");\n    socket.on(\"send_data\", data => {\n      socket.close();\n      setStatus(data);\n      getStatus(data);\n    });\n    socket.on(\"error\", () => {\n      console.log(\"error\");\n    });\n  }, []);\n  function getStatus(data) {\n    console.log(data);\n    const socket = io.connect(props.IP + \":\" + port);\n    socket.emit(\"get_status\", data);\n    socket.on(\"send_data\", data => {\n      setStatus(data);\n      setTimeout(() => {\n        getStatus(data);\n      }, 2000);\n      socket.close();\n    });\n  }\n\n  //   setInterval(() => {\n  //     console.log(\"querying data for\", props.IP);\n  //     socket.emit(\"get_status\",(status));\n  //     socket.on(\"send_data\", (data) => {\n  //       setStatus(data);\n  //     });\n  //   }, INTERVAL);\n\n  if (status === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Host Name: \", status.hostname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Architecture: \", status.architecture]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Platform: \", status.platform]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Up Time: \", status.uptime, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Memory: \", (status.memory.used / 1000).toFixed(1), \"/\", (status.memory.total / 1000).toFixed(1), \" GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"CPU: \", status.cpu[0].model, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: status.cpu.map((proc, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [proc.model, \" (\", proc.speed, \"): \", JSON.stringify(proc.usage)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Network: \", JSON.stringify(status.network)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Report, \"BS896UqrqyybjEKvhypabDkHm2E=\");\n_c = Report;\nexport default Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["useEffect","useState","io","Report","props","port","INTERVAL","status","setStatus","socket","connect","IP","emit","on","data","close","getStatus","console","log","setTimeout","hostname","architecture","platform","uptime","memory","used","toFixed","total","cpu","model","map","proc","idx","speed","JSON","stringify","usage","network"],"sources":["/home/trungn/OneDrive/nodeApp/client/src/components/Report.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\n/**\n *\n * @param {{hostname: string, architecture: string, platform: string,uptime: string,cpu:string,memory: string,network: string,date: string}} props\n */\nfunction Report(props) {\n  const port = 5782;\n  const INTERVAL = 2000;\n  var [status, setStatus] = useState(null);\n\n  useEffect(() => {\n    const socket = io.connect(props.IP + \":\" + port);\n    socket.emit(\"get_init\");\n    socket.on(\"send_data\", (data) => {\n      socket.close();\n      setStatus(data);\n      getStatus(data);\n    });\n    socket.on(\"error\", () => {\n      console.log(\"error\");\n    });\n  }, []);\n\n  function getStatus(data) {\n    console.log(data);\n    const socket = io.connect(props.IP + \":\" + port);\n    socket.emit(\"get_status\", data);\n    socket.on(\"send_data\", (data) => {\n      setStatus(data);\n      setTimeout(() => {\n        getStatus(data);\n      }, 2000);\n      socket.close();\n    });\n  }\n\n  //   setInterval(() => {\n  //     console.log(\"querying data for\", props.IP);\n  //     socket.emit(\"get_status\",(status));\n  //     socket.on(\"send_data\", (data) => {\n  //       setStatus(data);\n  //     });\n  //   }, INTERVAL);\n\n  if(status===null){\n    return <div>\n        <h1>Loading...</h1>\n    </div>\n  }\n  return (\n    <div>\n      <h1>Host Name: {status.hostname}</h1>\n        <ul>\n            <li>Architecture: {status.architecture}</li>\n            <li>Platform: {status.platform}</li>\n            <li>Up Time: {status.uptime} seconds</li>\n            <li>Memory: {(status.memory.used/1000).toFixed(1)}/{(status.memory.total/1000).toFixed(1)} GB</li>\n            <li>CPU: {status.cpu[0].model}\n                <ul>\n                    {status.cpu.map((proc, idx)=>{\n                        return <li key={idx}>{proc.model} ({proc.speed}): {JSON.stringify(proc.usage)}</li>\n                    })}\n                </ul>\n            </li>\n            <li>Network: {JSON.stringify(status.network)}</li>\n        </ul>\n    </div>\n  );\n}\n\nexport default Report;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}